[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "coda-code-assistant"
dynamic = ["version"]
description = "A multi-provider, CLI-focused code assistant for AI-assisted development"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "litellm>=1.0.0",
    "rich>=13.0.0",
    "prompt-toolkit>=3.0.0",
    "click>=8.0.0",
    "httpx>=0.25.0",
    "tomlkit>=0.12.0",
    "pydantic>=2.0.0",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.19.0",
    "oci>=2.119.1",
    "cryptography>=3.4.7",
    "pygments>=2.19.2",
    "pyyaml>=6.0.1",
    "textual>=0.47.0",
]

[project.scripts]
coda = "coda.cli.main:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[tool.uv]
package = true

[tool.hatch.version]
path = "coda/__version__.py"

[tool.hatch.build.targets.wheel]
packages = ["coda"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "-ra",
    "--strict-markers",
    "--tb=short",
]
markers = [
    "unit: Unit tests (fast, no external dependencies)",
    "integration: Integration tests (requires OCI credentials)",
    "functional: Functional/E2E tests (requires full setup)",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["coda"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py311', 'py312', 'py313']

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "W", "I", "N", "B", "UP"]
ignore = ["E501"]  # Line too long handled by black
